[{"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\index.js":"1","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\App.js":"2","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\reportWebVitals.js":"3","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Footer\\Footer.jsx":"4","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Header\\Header.jsx":"5","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\HomeScreen\\HomeScreen.jsx":"6","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\products.js":"7","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Product\\Product.jsx":"8","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Rating\\Rating.jsx":"9","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductScreen\\ProductScreen.jsx":"10","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\store.js":"11","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\productReducers.js":"12","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\productTypes.js":"13","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\productActions.js":"14","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Loader\\Loader.jsx":"15","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Message\\Message.jsx":"16","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\CartScreen\\CartScreen.jsx":"17","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\cartReducers.js":"18","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\cartTypes.js":"19","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\cartActions.js":"20","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\CartItem\\CartItem.jsx":"21","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\userReducers.js":"22","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\userTypes.js":"23","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\LoginScreen\\LoginScreen.jsx":"24","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\userActions.js":"25","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\RegisterScreen\\RegisterScreen.jsx":"26","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UpdateProfileScreen\\UpdateProfileScreen.jsx":"27","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ShippingScreen\\ShippingScreen.jsx":"28","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Steps\\Steps.jsx":"29","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.jsx":"30","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PlaceOrderScreen\\PlaceOrderScreen.jsx":"31","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\orderReducers.js":"32","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\orderTypes.js":"33","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\orderActions.js":"34","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\OrderDetails\\OrderDetails.jsx":"35","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UserListScreen\\UserListScreen.jsx":"36","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\EditUserScreen\\EditUserScreen.jsx":"37","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductsListScreen\\ProductsListScreen.jsx":"38"},{"size":351,"mtime":1609436514578,"results":"39","hashOfConfig":"40"},{"size":2130,"mtime":1610981798234,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1606453074822,"results":"42","hashOfConfig":"40"},{"size":249,"mtime":1609255228256,"results":"43","hashOfConfig":"40"},{"size":1418,"mtime":1610981822923,"results":"44","hashOfConfig":"40"},{"size":1356,"mtime":1609602023598,"results":"45","hashOfConfig":"40"},{"size":3198,"mtime":1609316214500,"results":"46","hashOfConfig":"47"},{"size":614,"mtime":1609594197494,"results":"48","hashOfConfig":"40"},{"size":1655,"mtime":1609311946892,"results":"49","hashOfConfig":"40"},{"size":2865,"mtime":1610541706756,"results":"50","hashOfConfig":"40"},{"size":1839,"mtime":1610958615428,"results":"51","hashOfConfig":"40"},{"size":1022,"mtime":1609605907690,"results":"52","hashOfConfig":"40"},{"size":366,"mtime":1609605732601,"results":"53","hashOfConfig":"40"},{"size":917,"mtime":1609606058520,"results":"54","hashOfConfig":"40"},{"size":366,"mtime":1610899816508,"results":"55","hashOfConfig":"40"},{"size":492,"mtime":1610915758064,"results":"56","hashOfConfig":"40"},{"size":2425,"mtime":1610541798663,"results":"57","hashOfConfig":"40"},{"size":1121,"mtime":1610547632573,"results":"58","hashOfConfig":"40"},{"size":200,"mtime":1610546905405,"results":"59","hashOfConfig":"40"},{"size":1162,"mtime":1610547637562,"results":"60","hashOfConfig":"40"},{"size":1099,"mtime":1609687758943,"results":"61","hashOfConfig":"40"},{"size":3810,"mtime":1610959746124,"results":"62","hashOfConfig":"40"},{"size":1548,"mtime":1610958989739,"results":"63","hashOfConfig":"40"},{"size":2035,"mtime":1610521403406,"results":"64","hashOfConfig":"40"},{"size":5017,"mtime":1610960423758,"results":"65","hashOfConfig":"40"},{"size":2432,"mtime":1610374600965,"results":"66","hashOfConfig":"40"},{"size":4724,"mtime":1610904050573,"results":"67","hashOfConfig":"40"},{"size":2605,"mtime":1610808746405,"results":"68","hashOfConfig":"40"},{"size":1047,"mtime":1610545104015,"results":"69","hashOfConfig":"40"},{"size":1352,"mtime":1610550889150,"results":"70","hashOfConfig":"40"},{"size":3218,"mtime":1610808992220,"results":"71","hashOfConfig":"40"},{"size":1997,"mtime":1610898598520,"results":"72","hashOfConfig":"40"},{"size":744,"mtime":1610893779723,"results":"73","hashOfConfig":"40"},{"size":2526,"mtime":1610894001518,"results":"74","hashOfConfig":"40"},{"size":4514,"mtime":1610893021918,"results":"75","hashOfConfig":"40"},{"size":2910,"mtime":1610961471256,"results":"76","hashOfConfig":"40"},{"size":3582,"mtime":1610961837907,"results":"77","hashOfConfig":"40"},{"size":2856,"mtime":1610981999965,"results":"78","hashOfConfig":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"12nx4w6",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"1jjskx0",{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"81"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"81"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"81"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\index.js",[],["171","172"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\App.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\reportWebVitals.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Footer\\Footer.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Header\\Header.jsx",["173","174"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\HomeScreen\\HomeScreen.jsx",["175"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Product from \"../../components/Product/Product\";\r\nimport { listProducts } from \"../../redux/actions/productActions\";\r\nimport styles from \"./HomeScreen.module.css\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Latest Products</h1>\r\n      <div className={styles.productsContainer}>\r\n        {loading ? (\r\n          <div className={styles.loaderContainer}>\r\n            <Loader />\r\n          </div>\r\n        ) : error ? (\r\n          <Message text='some error' />\r\n        ) : (\r\n          products.map((item) => (\r\n            <Product\r\n              id={item._id}\r\n              img={item.image}\r\n              name={item.name}\r\n              rating={item.rating}\r\n              numReviews={item.numReviews}\r\n              price={item.price}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\products.js",[],["176","177"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Product\\Product.jsx",["178"],"import React from \"react\";\r\nimport Rating from \"../Rating/Rating\";\r\nimport { Link } from 'react-router-dom'\r\nimport styles from \"./Product.module.css\";\r\nimport imgg from '../../assets/phone.jpg'\r\n\r\nconst Product = ({ id, img, name, rating, numReviews, price }) => {\r\n  return (\r\n    <div className={styles.card} key={id}>\r\n      <img src={img} alt={name} />\r\n      <div className={styles.cardBody}>\r\n        <Link to={`/product/${id}`}><p>{name}</p></Link>\r\n        <Rating value={rating} text={`${numReviews} reviews`} />\r\n        <h2>${price}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Rating\\Rating.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductScreen\\ProductScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\store.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\productReducers.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\productTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\productActions.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Loader\\Loader.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Message\\Message.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\CartScreen\\CartScreen.jsx",["179","180","181"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport CartItem from \"../../components/CartItem/CartItem\";\r\nimport styles from \"./CartScreen.module.css\";\r\nimport Message from \"../../components/Message/Message\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (userInfo) {\r\n      history.push('/shipping')\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.leftSection}>\r\n        <h1>Shopping Cart</h1>\r\n        <div className={styles.itemsContainer}>\r\n          {cartItems.length === 0 ? (\r\n            <Message text=\"You cart is empty\" />\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <>\r\n                <CartItem\r\n                  id={item.product}\r\n                  img={item.image}\r\n                  name={item.name}\r\n                  price={item.price}\r\n                  qty={item.qty}\r\n                  countInStock={item.countInStock}\r\n                />\r\n                <hr />\r\n              </>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={styles.rightSection}>\r\n        <div className={styles.checkout}>\r\n          <span>\r\n            <h2>\r\n              subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n              items\r\n            </h2>\r\n          </span>\r\n          <span>\r\n            <p>\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </p>\r\n          </span>\r\n          <span>\r\n            <button onClick={handleSubmit} >proceed to checkout</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\cartTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\cartActions.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\CartItem\\CartItem.jsx",["182","183"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../../redux/actions/cartActions\";\r\nimport styles from \"./CartItem.module.css\";\r\n\r\nconst CartItem = ({ img, name, id, price, qty, countInStock }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  var arr = [];\r\n  let i;\r\n  for (i = 0; i < countInStock; i++) {\r\n    arr.push(i + 1);\r\n  }\r\n\r\n  const removeItem = () => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img src={img} alt={name} />\r\n      <p>{name}</p>\r\n      <p>{price}</p>\r\n      {countInStock > 0 && (\r\n        <span>\r\n          <select\r\n            value={qty}\r\n            onChange={(e) => dispatch(addToCart(id, Number(e.target.value)))}\r\n          >\r\n            {arr.map((i) => (\r\n              <option value={i}>{i}</option>\r\n            ))}\r\n          </select>\r\n        </span>\r\n      )}\r\n      <button onClick={removeItem} >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\userReducers.js",["184"],"import { GET_MY_ORDERS_FAIL } from \"../types/orderTypes\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_PROFILE_REQUEST,\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAIL,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAIL,\r\n  CLEAR_USERS,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAIL,\r\n  CLEAR_DELETE_USER_MESSAGE,\r\n  GET_USER_REQUEST,\r\n  GET_USER_SUCCESS,\r\n  GET_USER_FAIL,\r\n  EDIT_USER_REQUEST,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_FAIL,\r\n  EDIT_USER_RESET,\r\n} from \"../types/userTypes\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userProfileReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_PROFILE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_PROFILE_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, updatedUser: action.payload };\r\n    case UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_REQUEST:\r\n      return { loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case GET_USERS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_USERS:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DELETE_USER_REQUEST:\r\n      return { loading: true };\r\n    case DELETE_USER_SUCCESS:\r\n      return { loading: false, message: action.payload };\r\n    case DELETE_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_DELETE_USER_MESSAGE:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_REQUEST:\r\n      return { loading: true };\r\n    case GET_USER_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case GET_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const editUserReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case EDIT_USER_REQUEST:\r\n      return { loading: true };\r\n    case EDIT_USER_SUCCESS:\r\n      return { loading: false, success: true, user: action.payload };\r\n    case EDIT_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case EDIT_USER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\userTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\LoginScreen\\LoginScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\userActions.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\RegisterScreen\\RegisterScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UpdateProfileScreen\\UpdateProfileScreen.jsx",["185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from \"../../redux/actions/userActions\";\r\nimport { getMyOrders } from \"../../redux/actions/orderActions\";\r\nimport styles from \"./UpdateProfileScreen.module.css\";\r\n\r\nconst UpdateProfileScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { user, loading, error } = userProfile;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const updateProfile = useSelector((state) => state.updateProfile);\r\n  const { success, updatedUser } = updateProfile;\r\n\r\n  const orders = useSelector((state) => state.myOrders);\r\n  const {\r\n    success: myOrdersSuccess,\r\n    myOrders,\r\n    loading: myOrdersLoading,\r\n  } = orders;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n    dispatch(getMyOrders());\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n  };\r\n  console.log(orders);\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <h1>Update Profile</h1>\r\n        {error ? <Message text={error} variant=\"error\" /> : null}\r\n        {success ? (\r\n          <Message text=\"Profile Updated Successfully\" variant=\"success\" />\r\n        ) : null}\r\n        {loading ? <Loader /> : null}\r\n        <form>\r\n          <div className={styles.field}>\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter Name\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>Email Address</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter Email\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"Enter Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={handleSubmit}>Update</button>\r\n        </form>\r\n      </div>\r\n      {/* my orders */}\r\n      <div className={styles.myOrdersContainer}>\r\n        <h1>My orders</h1>\r\n        {myOrdersLoading ? (\r\n          <Loader width=\"50px\" />\r\n        ) : orders.myOrders.length === 0 ? (\r\n          <Message variant=\"error\" text=\"No Orders\" />\r\n        ) : (\r\n          orders.myOrders.map((item) => (\r\n            <Link to={`/orders/${item._id}`}>\r\n            <table>\r\n              <tr className={styles.headingRow}>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n              </tr>\r\n              <tr className={styles.dataRow}>\r\n                <td>{item._id}</td>\r\n                <td>{item.createdAt}</td>\r\n                <td>{item.totalPrice}</td>\r\n                <td>\r\n                  {item.isPaid ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {item.isDelivered ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </table>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfileScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ShippingScreen\\ShippingScreen.jsx",["188"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShipping } from \"../../redux/actions/cartActions\";\r\nimport styles from \"./ShippingScreen.module.css\";\r\nimport Steps from \"../../components/Steps/Steps\";\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shipping } = cart;\r\n\r\n  const [address, setAddress] = useState(shipping.address);\r\n  const [city, setCity] = useState(shipping.city);\r\n  const [postalCode, setPostal] = useState(shipping.postalCode);\r\n  const [country, setCountry] = useState(shipping.country);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShipping({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n      <Steps step1 step2 />\r\n        <h1>Shipping</h1>\r\n        <form>\r\n        <div className={styles.field}>\r\n            <label>Address</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={address}\r\n              placeholder=\"Enter Address\"\r\n              autoComplete=\"off\"\r\n              required\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>City</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              value={city}\r\n              placeholder=\"Enter City\"\r\n              autoComplete=\"off\"\r\n              required\r\n              onChange={(e) => setCity(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>Postal Code</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"postal\"\r\n              value={postalCode}\r\n              placeholder=\"Enter Postal\"\r\n              required\r\n              onChange={(e) => setPostal(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>Country</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              value={country}\r\n              placeholder=\"Enter country\"\r\n              required\r\n              onChange={(e) => setCountry(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={handleSubmit}>Continue</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Steps\\Steps.jsx",[],["189","190"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.jsx",["191"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../../redux/actions/cartActions\";\r\nimport styles from \"./PaymentScreen.module.css\";\r\nimport Steps from \"../../components/Steps/Steps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shipping } = cart;\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shipping) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push(\"/place-order\");\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <Steps step1 step2 step3/>\r\n        <h1>Payment Method</h1>\r\n        <form>\r\n          <h3>Select Method</h3>\r\n          <div className={styles.field}>\r\n            <input\r\n              type=\"radio\"\r\n              value={paymentMethod}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n            <label>Payment Method</label>\r\n          </div>\r\n          <button onClick={handleSubmit}>Continue</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PlaceOrderScreen\\PlaceOrderScreen.jsx",["192","193","194","195","196","197","198"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrder } from \"../../redux/actions/orderActions\";\r\nimport Steps from \"../../components/Steps/Steps\";\r\nimport styles from \"./PlaceOrderScreen.module.css\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shipping, cartItems, payment } = cart;\r\n  const { address, city, country, postalCode } = shipping;\r\n\r\n  const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 100\r\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2))\r\n  const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n\r\n  const orderState = useSelector(state => state.order)\r\n  const { success, order, error, loading } = orderState\r\n\r\n  useEffect(() => {\r\n    if(success) {\r\n      history.push(`/orders/${order._id}`)\r\n    }\r\n  }, [history, success])\r\n\r\n  const placeOrder = e => {\r\n    e.preventDefault()\r\n    dispatch(createOrder({\r\n      orderItems: cartItems,\r\n      shippingAddress: shipping,\r\n      paymentMethod: payment,\r\n      taxPrice: taxPrice,\r\n      shippingPrice: shippingPrice,\r\n      totalPrice: totalPrice,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <Steps step1 step2 step3 step4 />\r\n      <div className={styles.container}>\r\n        <div className={styles.leftContainer}>\r\n          <div className={styles.step}>\r\n            <h2>Shipping</h2>\r\n            <p>{address}</p>\r\n          </div>\r\n          <hr />\r\n          <div className={styles.step}>\r\n            <h2>Payment Method</h2>\r\n            <p>Method: {payment}</p>\r\n          </div>\r\n          <hr />\r\n          <div className={styles.step}>\r\n            <h2>Order Items</h2>\r\n            <div className={styles.products}>\r\n              {cartItems.map((product) => (\r\n                <>\r\n                  <div className={styles.product} key={product.product}>\r\n                    <img src={product.image} alt={product.name} />\r\n                    <p>{product.name}</p>\r\n                    <span>{product.qty} x {product.price} = {(product.qty * product.price).toFixed(2)}</span>\r\n                  </div>\r\n                  <hr />\r\n                </>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.rightContainer}>\r\n          <div className={styles.orderSummary}>\r\n            <h2>Order Summary</h2>\r\n            <span>\r\n              <p>Items</p>\r\n              <p>${itemsPrice}</p>\r\n            </span>\r\n            <span>\r\n              <p>Shipping</p>\r\n              <p>${shippingPrice}</p>\r\n            </span>\r\n            <span>\r\n              <p>Tax</p>\r\n              <p>${taxPrice}</p>\r\n            </span>\r\n            <span>\r\n              <p>Total</p>\r\n              <p>${totalPrice}</p>\r\n            </span>\r\n            <span>\r\n              <button onClick={placeOrder}>Place Order</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\orderTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\orderActions.js",["199"],"import axios from \"axios\";\r\nimport {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  GET_MY_ORDERS_REQUEST,\r\n  GET_MY_ORDERS_SUCCESS,\r\n  GET_MY_ORDERS_FAIL,\r\n} from \"../types/orderTypes\";\r\n\r\n// Create order\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/orders\", order, config);\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: CREATE_ORDER_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// get order by id\r\n\r\nexport const getOrder = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// update order\r\n\r\nexport const updateOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult ,config);\r\n\r\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: ORDER_PAY_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n\r\n// get my orders\r\n\r\nexport const getMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_MY_ORDERS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({ type: GET_MY_ORDERS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: GET_MY_ORDERS_FAIL, payload: err.message });\r\n  }\r\n};","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\OrderDetails\\OrderDetails.jsx",["200","201","202","203","204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrder, updateOrder } from \"../../redux/actions/orderActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport styles from \"./OrderDetails.module.css\";\r\n\r\nconst OrderDetails = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const orderId = match.params.id;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, payment } = cart;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { success, order, error, loading } = orderDetails;\r\n\r\n  const itemsPrice = Number(\r\n    cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  ).toFixed(2);\r\n  const shippingPrice =\r\n    itemsPrice > 100 ? Number(0).toFixed(2) : Number(100).toFixed(2);\r\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2));\r\n  const totalPrice = (\r\n    Number(itemsPrice) +\r\n    Number(shippingPrice) +\r\n    Number(taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const updatedOrder = useSelector((state) => state.updateOrder);\r\n  const {\r\n    success: paySuccess,\r\n    error: payError,\r\n    loading: payLoading,\r\n  } = updatedOrder;\r\n\r\n  useEffect(() => {\r\n    if(!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    dispatch(getOrder(orderId));\r\n  }, [dispatch, orderId, paySuccess, history]);\r\n\r\n  const pay = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateOrder(orderId, {\r\n        id: 1,\r\n        status: \"status\",\r\n        update_time: \"update_time\",\r\n        email_address: \"email_address\",\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.mainContainer}>\r\n          <h1 className={styles.orderNo}>Order {order._id}</h1>\r\n          <div className={styles.container}>\r\n            <div className={styles.leftContainer}>\r\n              <div className={styles.step}>\r\n                <h2>Shipping</h2>\r\n                <p>Name: {order.user.name}</p>\r\n                <p>Email: {order.user.email}</p>\r\n                <p>Address: {order.shippingAddress.address}</p>\r\n                <Message\r\n                  variant={order.isDelivered ? \"success\" : \"error\"}\r\n                  text={order.isDelivered ? \"Delivered\" : \"Not Delivered\"}\r\n                />\r\n              </div>\r\n              <hr />\r\n              <div className={styles.step}>\r\n                <h2>Payment Method</h2>\r\n                <p>Method: {payment}</p>\r\n                <Message\r\n                  variant={order.isPaid ? \"success\" : \"error\"}\r\n                  text={order.isPaid ? \"Paid\" : \"Not Paid\"}\r\n                />\r\n              </div>\r\n              <hr />\r\n              <div className={styles.step}>\r\n                <h2>Order Items</h2>\r\n                <div className={styles.products}>\r\n                  {cartItems.map((product) => (\r\n                    <>\r\n                      <div className={styles.product} key={product.product}>\r\n                        <img src={product.image} alt={product.name} />\r\n                        <p>{product.name}</p>\r\n                        <span>\r\n                          {product.qty} x {product.price} = $\r\n                          {(product.qty * product.price).toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                      <hr />\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightContainer}>\r\n              <div className={styles.orderSummary}>\r\n                <h2>Order Summary</h2>\r\n                <span>\r\n                  <p>Items</p>\r\n                  <p>${itemsPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <p>Shipping</p>\r\n                  <p>${shippingPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <p>Tax</p>\r\n                  <p>${taxPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <p>Total</p>\r\n                  <p>${totalPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <button onClick={pay}>Pay</button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UserListScreen\\UserListScreen.jsx",["206","207","208","209"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearDeleteMsg,\r\n  deleteUser,\r\n  getAllUsers,\r\n} from \"../../redux/actions/userActions\";\r\nimport styles from \"./UserListScreen.module.css\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, error } = userLogin;\r\n\r\n  const allUsers = useSelector((state) => state.allUsers);\r\n  const { users, loading: usersLoading, error: usersError } = allUsers;\r\n\r\n  const deleteUserUpdate = useSelector((state) => state.deleteUser);\r\n  const {\r\n    message,\r\n    loading: deleteLoading,\r\n    error: deleteError,\r\n  } = deleteUserUpdate;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getAllUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, message]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Users</h1>\r\n      {deleteLoading ? (\r\n        <Loader width=\"30px\" />\r\n      ) : message ? (\r\n        <Message\r\n          variant=\"success\"\r\n          text={message.message}\r\n          onClick={() => dispatch(clearDeleteMsg())}\r\n        />\r\n      ) : null}\r\n      {error ? (\r\n        <Message\r\n          variant=\"success\"\r\n          text=\"Something's wrong\"\r\n          onClick={() => dispatch(clearDeleteMsg())}\r\n        />\r\n      ) : null}\r\n      {!users ? (\r\n        <Loader width=\"50px\" />\r\n      ) : (\r\n        <table>\r\n          <tr className={styles.headingRow}>\r\n            <th>ID</th>\r\n            <th>NAME</th>\r\n            <th>EMAIL</th>\r\n            <th>ADMIN</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n          {users.map((user) => (\r\n            <tr className={styles.dataRow}>\r\n              <td>{user._id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>\r\n                {user.isAdmin ? (\r\n                  <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                ) : (\r\n                  <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <Link to={`/user/${user._id}/edit`}>\r\n                  <i className=\"fas fa-edit\" style={{ color: \"green\" }}></i>\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                <i\r\n                  className=\"fas fa-trash\"\r\n                  onClick={() => dispatch(deleteUser(user._id))}\r\n                  style={{ color: \"red\" }}\r\n                ></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\EditUserScreen\\EditUserScreen.jsx",["210","211","212","213","214","215"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, editUser, clearEditMsg } from \"../../redux/actions/userActions\";\r\nimport styles from \"./EditUserScreen.module.css\";\r\n\r\nconst EditUserScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { user, loading: profileLoading, error: profileError } = userProfile;\r\n\r\n  const updatedUser = useSelector((state) => state.editUser);\r\n  const {\r\n    user: editedUser,\r\n    success: editSuccess,\r\n    loading: editLoading,\r\n    error: editError,\r\n  } = updatedUser;\r\n\r\n  useEffect(() => {\r\n    if (!user.name || user._id !== match.params.id) {\r\n      dispatch(getUserDetails(match.params.id));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, history, match, user]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      editUser({\r\n        _id: user._id,\r\n        name,\r\n        email,\r\n        isAdmin,\r\n      })\r\n    );\r\n  };\r\nconsole.log(isAdmin)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.subContainer}>\r\n        {editLoading ? (\r\n          <Loader width=\"30px\" />\r\n        ) : editSuccess ? (\r\n          <Message variant=\"success\" onClick={() => dispatch(clearEditMsg())} text=\"User Updated Successfully\" />\r\n        ) : editError ? (\r\n          <Message variant=\"error\" onClick={() => dispatch(clearEditMsg())} text=\"Something's wrong\" />\r\n        ) : null}\r\n        {profileLoading ? (\r\n          <div>\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.formContainer}>\r\n            <h1>Edit user</h1>\r\n            <form>\r\n              <div className={styles.field}>\r\n                <label>Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Email Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.checkField}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"check\"\r\n                  value={isAdmin}\r\n                  onChange={(e) => setIsAdmin(!isAdmin)}\r\n                />\r\n                {user.isAdmin ? <label>Remove Admin</label> : <label>Make {user.name} Admin</label>}\r\n              </div>\r\n              <button onClick={handleSubmit}>Update</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductsListScreen\\ProductsListScreen.jsx",["216","217","218","219","220","221"],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":10,"column":21,"nodeType":"228","messageId":"229","endLine":10,"endColumn":28},{"ruleId":"226","severity":1,"message":"230","line":10,"column":30,"nodeType":"228","messageId":"229","endLine":10,"endColumn":35},{"ruleId":"226","severity":1,"message":"231","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"222","replacedBy":"232"},{"ruleId":"224","replacedBy":"233"},{"ruleId":"226","severity":1,"message":"234","line":5,"column":8,"nodeType":"228","messageId":"229","endLine":5,"endColumn":12},{"ruleId":"226","severity":1,"message":"231","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":16,"column":21,"nodeType":"228","messageId":"229","endLine":16,"endColumn":28},{"ruleId":"226","severity":1,"message":"230","line":16,"column":30,"nodeType":"228","messageId":"229","endLine":16,"endColumn":35},{"ruleId":"226","severity":1,"message":"231","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"235","line":2,"column":23,"nodeType":"228","messageId":"229","endLine":2,"endColumn":34},{"ruleId":"226","severity":1,"message":"236","line":1,"column":10,"nodeType":"228","messageId":"229","endLine":1,"endColumn":28},{"ruleId":"226","severity":1,"message":"237","line":27,"column":20,"nodeType":"228","messageId":"229","endLine":27,"endColumn":31},{"ruleId":"226","severity":1,"message":"238","line":31,"column":14,"nodeType":"228","messageId":"229","endLine":31,"endColumn":29},{"ruleId":"226","severity":1,"message":"239","line":32,"column":5,"nodeType":"228","messageId":"229","endLine":32,"endColumn":13},{"ruleId":"226","severity":1,"message":"240","line":1,"column":27,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"222","replacedBy":"241"},{"ruleId":"224","replacedBy":"242"},{"ruleId":"226","severity":1,"message":"240","line":1,"column":27,"nodeType":"228","messageId":"229","endLine":1,"endColumn":36},{"ruleId":"226","severity":1,"message":"231","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"243","line":12,"column":20,"nodeType":"228","messageId":"229","endLine":12,"endColumn":24},{"ruleId":"226","severity":1,"message":"244","line":12,"column":26,"nodeType":"228","messageId":"229","endLine":12,"endColumn":33},{"ruleId":"226","severity":1,"message":"245","line":12,"column":35,"nodeType":"228","messageId":"229","endLine":12,"endColumn":45},{"ruleId":"226","severity":1,"message":"230","line":20,"column":27,"nodeType":"228","messageId":"229","endLine":20,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":20,"column":34,"nodeType":"228","messageId":"229","endLine":20,"endColumn":41},{"ruleId":"246","severity":1,"message":"247","line":26,"column":6,"nodeType":"248","endLine":26,"endColumn":24,"suggestions":"249"},{"ruleId":"226","severity":1,"message":"250","line":12,"column":3,"nodeType":"228","messageId":"229","endLine":12,"endColumn":18},{"ruleId":"226","severity":1,"message":"231","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},{"ruleId":"226","severity":1,"message":"251","line":19,"column":11,"nodeType":"228","messageId":"229","endLine":19,"endColumn":18},{"ruleId":"226","severity":1,"message":"230","line":19,"column":27,"nodeType":"228","messageId":"229","endLine":19,"endColumn":32},{"ruleId":"226","severity":1,"message":"252","line":36,"column":12,"nodeType":"228","messageId":"229","endLine":36,"endColumn":20},{"ruleId":"226","severity":1,"message":"253","line":37,"column":14,"nodeType":"228","messageId":"229","endLine":37,"endColumn":24},{"ruleId":"246","severity":1,"message":"254","line":45,"column":6,"nodeType":"248","endLine":45,"endColumn":46,"suggestions":"255"},{"ruleId":"226","severity":1,"message":"256","line":20,"column":27,"nodeType":"228","messageId":"229","endLine":20,"endColumn":39},{"ruleId":"226","severity":1,"message":"257","line":20,"column":48,"nodeType":"228","messageId":"229","endLine":20,"endColumn":58},{"ruleId":"226","severity":1,"message":"258","line":26,"column":12,"nodeType":"228","messageId":"229","endLine":26,"endColumn":23},{"ruleId":"246","severity":1,"message":"254","line":35,"column":6,"nodeType":"248","endLine":35,"endColumn":34,"suggestions":"259"},{"ruleId":"226","severity":1,"message":"260","line":2,"column":10,"nodeType":"228","messageId":"229","endLine":2,"endColumn":14},{"ruleId":"226","severity":1,"message":"261","line":17,"column":11,"nodeType":"228","messageId":"229","endLine":17,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":17,"column":21,"nodeType":"228","messageId":"229","endLine":17,"endColumn":28},{"ruleId":"226","severity":1,"message":"230","line":17,"column":30,"nodeType":"228","messageId":"229","endLine":17,"endColumn":35},{"ruleId":"226","severity":1,"message":"262","line":20,"column":49,"nodeType":"228","messageId":"229","endLine":20,"endColumn":61},{"ruleId":"226","severity":1,"message":"263","line":24,"column":11,"nodeType":"228","messageId":"229","endLine":24,"endColumn":21},{"ruleId":"226","severity":1,"message":"264","line":3,"column":8,"nodeType":"228","messageId":"229","endLine":3,"endColumn":15},{"ruleId":"226","severity":1,"message":"265","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":14},{"ruleId":"226","severity":1,"message":"230","line":13,"column":21,"nodeType":"228","messageId":"229","endLine":13,"endColumn":26},{"ruleId":"226","severity":1,"message":"266","line":18,"column":14,"nodeType":"228","messageId":"229","endLine":18,"endColumn":28},{"ruleId":"226","severity":1,"message":"267","line":19,"column":12,"nodeType":"228","messageId":"229","endLine":19,"endColumn":24},{"ruleId":"246","severity":1,"message":"254","line":35,"column":6,"nodeType":"248","endLine":35,"endColumn":25,"suggestions":"268"},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useState' is defined but never used.",["269"],["270"],"'imgg' is defined but never used.","'useSelector' is defined but never used.","'GET_MY_ORDERS_FAIL' is defined but never used.","'updatedUser' is assigned a value but never used.","'myOrdersSuccess' is assigned a value but never used.","'myOrders' is assigned a value but never used.","'useEffect' is defined but never used.",["269"],["270"],"'city' is assigned a value but never used.","'country' is assigned a value but never used.","'postalCode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["271"],"'ORDER_PAY_RESET' is defined but never used.","'success' is assigned a value but never used.","'payError' is assigned a value but never used.","'payLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["272"],"'usersLoading' is assigned a value but never used.","'usersError' is assigned a value but never used.","'deleteError' is assigned a value but never used.",["273"],"'Link' is defined but never used.","'userInfo' is assigned a value but never used.","'profileError' is assigned a value but never used.","'editedUser' is assigned a value but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'productLoading' is assigned a value but never used.","'productError' is assigned a value but never used.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [history, order._id, success]",{"range":"283","text":"284"},"Update the dependencies array to be: [dispatch, orderId, paySuccess, history, userInfo]",{"range":"285","text":"286"},"Update the dependencies array to be: [dispatch, history, message, userInfo]",{"range":"287","text":"288"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"289","text":"290"},[1034,1052],"[history, order._id, success]",[1476,1516],"[dispatch, orderId, paySuccess, history, userInfo]",[1057,1085],"[dispatch, history, message, userInfo]",[1084,1103],"[dispatch, history, userInfo]"]