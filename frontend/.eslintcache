[{"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\index.js":"1","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\App.js":"2","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\reportWebVitals.js":"3","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Footer\\Footer.jsx":"4","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Header\\Header.jsx":"5","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\HomeScreen\\HomeScreen.jsx":"6","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\products.js":"7","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Product\\Product.jsx":"8","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Rating\\Rating.jsx":"9","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductScreen\\ProductScreen.jsx":"10","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\store.js":"11","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\productReducers.js":"12","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\productTypes.js":"13","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\productActions.js":"14","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Loader\\Loader.jsx":"15","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Message\\Message.jsx":"16","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\CartScreen\\CartScreen.jsx":"17","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\cartReducers.js":"18","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\cartTypes.js":"19","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\cartActions.js":"20","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\CartItem\\CartItem.jsx":"21","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\userReducers.js":"22","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\userTypes.js":"23","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\LoginScreen\\LoginScreen.jsx":"24","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\userActions.js":"25","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\RegisterScreen\\RegisterScreen.jsx":"26","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UpdateProfileScreen\\UpdateProfileScreen.jsx":"27","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ShippingScreen\\ShippingScreen.jsx":"28","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Steps\\Steps.jsx":"29","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.jsx":"30","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PlaceOrderScreen\\PlaceOrderScreen.jsx":"31","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\orderReducers.js":"32","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\orderTypes.js":"33","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\orderActions.js":"34","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\OrderDetails\\OrderDetails.jsx":"35","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UserListScreen\\UserListScreen.jsx":"36","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\EditUserScreen\\EditUserScreen.jsx":"37","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductsListScreen\\ProductsListScreen.jsx":"38","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\EditProductScreen\\EditProductScreen.jsx":"39","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\OrdersListScreen\\OrdersListScreen.jsx":"40","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Modal\\Modal.jsx":"41","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\SearchBar\\SearchBar.jsx":"42","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\ProductCarousel\\ProductCarousel.jsx":"43","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Header\\SideNav\\SideNav.jsx":"44","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\SearchScreen\\SearchScreen.jsx":"45"},{"size":351,"mtime":1609436514578,"results":"46","hashOfConfig":"47"},{"size":2722,"mtime":1612157141808,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":1606453074822,"results":"49","hashOfConfig":"47"},{"size":249,"mtime":1609255228256,"results":"50","hashOfConfig":"47"},{"size":3689,"mtime":1612156292423,"results":"51","hashOfConfig":"47"},{"size":1898,"mtime":1612154693918,"results":"52","hashOfConfig":"47"},{"size":3198,"mtime":1609316214500,"results":"53","hashOfConfig":"54"},{"size":571,"mtime":1612154503839,"results":"55","hashOfConfig":"47"},{"size":1655,"mtime":1609311946892,"results":"56","hashOfConfig":"47"},{"size":4694,"mtime":1611245182739,"results":"57","hashOfConfig":"47"},{"size":2259,"mtime":1611900544788,"results":"58","hashOfConfig":"47"},{"size":3050,"mtime":1611240640050,"results":"59","hashOfConfig":"47"},{"size":1230,"mtime":1611240582611,"results":"60","hashOfConfig":"47"},{"size":3742,"mtime":1611319476634,"results":"61","hashOfConfig":"47"},{"size":366,"mtime":1610899816508,"results":"62","hashOfConfig":"47"},{"size":492,"mtime":1610915758064,"results":"63","hashOfConfig":"47"},{"size":2425,"mtime":1610541798663,"results":"64","hashOfConfig":"47"},{"size":1121,"mtime":1610547632573,"results":"65","hashOfConfig":"47"},{"size":200,"mtime":1610546905405,"results":"66","hashOfConfig":"47"},{"size":1162,"mtime":1610547637562,"results":"67","hashOfConfig":"47"},{"size":1099,"mtime":1609687758943,"results":"68","hashOfConfig":"47"},{"size":3898,"mtime":1611907813619,"results":"69","hashOfConfig":"47"},{"size":1604,"mtime":1610990212325,"results":"70","hashOfConfig":"47"},{"size":2035,"mtime":1610521403406,"results":"71","hashOfConfig":"47"},{"size":5199,"mtime":1611990929915,"results":"72","hashOfConfig":"47"},{"size":2432,"mtime":1610374600965,"results":"73","hashOfConfig":"47"},{"size":4870,"mtime":1611907610429,"results":"74","hashOfConfig":"47"},{"size":2594,"mtime":1611987986350,"results":"75","hashOfConfig":"47"},{"size":1047,"mtime":1610545104015,"results":"76","hashOfConfig":"47"},{"size":1352,"mtime":1610550889150,"results":"77","hashOfConfig":"47"},{"size":3218,"mtime":1610808992220,"results":"78","hashOfConfig":"47"},{"size":3080,"mtime":1611898924119,"results":"79","hashOfConfig":"47"},{"size":1248,"mtime":1611162269031,"results":"80","hashOfConfig":"47"},{"size":3814,"mtime":1611165642460,"results":"81","hashOfConfig":"47"},{"size":5206,"mtime":1611166355715,"results":"82","hashOfConfig":"47"},{"size":2910,"mtime":1610961471256,"results":"83","hashOfConfig":"47"},{"size":3582,"mtime":1610961837907,"results":"84","hashOfConfig":"47"},{"size":3613,"mtime":1611076528544,"results":"85","hashOfConfig":"47"},{"size":6062,"mtime":1611988358823,"results":"86","hashOfConfig":"47"},{"size":2644,"mtime":1611156352925,"results":"87","hashOfConfig":"47"},{"size":1976,"mtime":1611241646261,"results":"88","hashOfConfig":"47"},{"size":517,"mtime":1612156308704,"results":"89","hashOfConfig":"47"},{"size":729,"mtime":1612114173647,"results":"90","hashOfConfig":"47"},{"size":4939,"mtime":1612113775639,"results":"91","hashOfConfig":"47"},{"size":994,"mtime":1612157527555,"results":"92","hashOfConfig":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"12nx4w6",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1jjskx0",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"95"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"95"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"95"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"95"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"95"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"95"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"95"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"95"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"95"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"95"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\index.js",[],["201","202"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\App.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\reportWebVitals.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Footer\\Footer.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Header\\Header.jsx",["203","204"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\HomeScreen\\HomeScreen.jsx",["205","206"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\products.js",[],["207","208"],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Product\\Product.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Rating\\Rating.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductScreen\\ProductScreen.jsx",["209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../../components/Rating/Rating\";\r\nimport {\r\n  addProductReview,\r\n  listProductDetails,\r\n} from \"../../redux/actions/productActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport styles from \"./ProductScreen.module.css\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const [productRating, setProductRating] = useState(\"\");\r\n  const [productComment, setProductComment] = useState(\"\");\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productReview = useSelector((state) => state.productReview);\r\n  const {\r\n    loading: reviewLoading,\r\n    error: reviewError,\r\n    success: reviewSuccess,\r\n  } = productReview;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, reviewSuccess]);\r\n\r\n  const {\r\n    name,\r\n    image,\r\n    description,\r\n    price,\r\n    rating,\r\n    numReviews,\r\n    countInStock,\r\n    reviews,\r\n  } = product;\r\n\r\n  var arr = [];\r\n  let i;\r\n  for (i = 0; i < countInStock; i++) {\r\n    arr.push(i + 1);\r\n  }\r\n\r\n  const handleCartSubmitHandler = (e) => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"dropdown\") {\r\n      setProductRating(e.target.value);\r\n    } else {\r\n      setProductComment(e.target.value);\r\n    }\r\n  };\r\n\r\n  const submitReview = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProductReview(match.params.id, productRating, productComment));\r\n    setIsOpen(false)\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Link to=\"/\">\r\n        <p className={styles.goBack}>Go back</p>\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message />\r\n      ) : (\r\n        <div className={styles.subContainer}>\r\n          <div className={styles.imgContainer}>\r\n            <img src={image} alt={name} />\r\n          </div>\r\n          <div className={styles.textContainer}>\r\n            <h1>{name}</h1>\r\n            <hr />\r\n            <div className={styles.ratingContainer}>\r\n              <Rating value={rating} text={`${numReviews} reviews`} />\r\n            </div>\r\n            <hr />\r\n            <p className={styles.price}>Price: ${price}</p>\r\n            <hr />\r\n            <p className={styles.description}>{description}</p>\r\n          </div>\r\n          <div className={styles.finalContainer}>\r\n            <span>\r\n              <p>Price:</p>\r\n              <p>${price}</p>\r\n            </span>\r\n            <span>\r\n              <p>Status:</p>\r\n              <p>{countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}</p>\r\n            </span>\r\n            {countInStock > 0 && (\r\n              <span>\r\n                <p>Qty</p>\r\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                  {arr.map((i) => (\r\n                    <option value={i}>{i}</option>\r\n                  ))}\r\n                </select>\r\n              </span>\r\n            )}\r\n            <span>\r\n              <button\r\n                onClick={handleCartSubmitHandler}\r\n                disabled={countInStock <= 0}\r\n              >\r\n                Add to cart\r\n              </button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className={styles.reviewSection}>\r\n        <div className={styles.reviewSectionTop}>\r\n          <h2>Product Reviews</h2>\r\n          <button onClick={() => setIsOpen(true)}>Write review</button>\r\n        </div>\r\n        {!reviews ? (\r\n          <Loader width=\"30px\" />\r\n        ) : reviews.length === 0 ? (\r\n          <p>No Reviews for this Product</p>\r\n        ) : (\r\n          reviews.map((review) => (\r\n            <>\r\n              <div key={review._id} className={styles.review}>\r\n                <p>{review.name}</p>\r\n                <p>{review.comment}</p>\r\n                <Rating value={review.rating} text=\"rating\" />\r\n              </div>\r\n              <hr />\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        setIsOpen={setIsOpen}\r\n        onChange={handleChange}\r\n        onClick={submitReview}\r\n        comment={productComment}\r\n        rating={productRating}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\store.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\productReducers.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\productTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\productActions.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Loader\\Loader.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Message\\Message.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\CartScreen\\CartScreen.jsx",["211","212","213"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport CartItem from \"../../components/CartItem/CartItem\";\r\nimport styles from \"./CartScreen.module.css\";\r\nimport Message from \"../../components/Message/Message\";\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (userInfo) {\r\n      history.push('/shipping')\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.leftSection}>\r\n        <h1>Shopping Cart</h1>\r\n        <div className={styles.itemsContainer}>\r\n          {cartItems.length === 0 ? (\r\n            <Message text=\"You cart is empty\" />\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <>\r\n                <CartItem\r\n                  id={item.product}\r\n                  img={item.image}\r\n                  name={item.name}\r\n                  price={item.price}\r\n                  qty={item.qty}\r\n                  countInStock={item.countInStock}\r\n                />\r\n                <hr />\r\n              </>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={styles.rightSection}>\r\n        <div className={styles.checkout}>\r\n          <span>\r\n            <h2>\r\n              subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n              items\r\n            </h2>\r\n          </span>\r\n          <span>\r\n            <p>\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </p>\r\n          </span>\r\n          <span>\r\n            <button onClick={handleSubmit} >proceed to checkout</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\cartReducers.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\cartTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\cartActions.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\CartItem\\CartItem.jsx",["214","215"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart, removeFromCart } from \"../../redux/actions/cartActions\";\r\nimport styles from \"./CartItem.module.css\";\r\n\r\nconst CartItem = ({ img, name, id, price, qty, countInStock }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  var arr = [];\r\n  let i;\r\n  for (i = 0; i < countInStock; i++) {\r\n    arr.push(i + 1);\r\n  }\r\n\r\n  const removeItem = () => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img src={img} alt={name} />\r\n      <p>{name}</p>\r\n      <p>{price}</p>\r\n      {countInStock > 0 && (\r\n        <span>\r\n          <select\r\n            value={qty}\r\n            onChange={(e) => dispatch(addToCart(id, Number(e.target.value)))}\r\n          >\r\n            {arr.map((i) => (\r\n              <option value={i}>{i}</option>\r\n            ))}\r\n          </select>\r\n        </span>\r\n      )}\r\n      <button onClick={removeItem} >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\userReducers.js",["216"],"import { GET_MY_ORDERS_FAIL } from \"../types/orderTypes\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_PROFILE_REQUEST,\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAIL,\r\n  USER_PROFILE_RESET,\r\n  UPDATE_PROFILE_REQUEST,\r\n  UPDATE_PROFILE_SUCCESS,\r\n  UPDATE_PROFILE_FAIL,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAIL,\r\n  CLEAR_USERS,\r\n  DELETE_USER_REQUEST,\r\n  DELETE_USER_SUCCESS,\r\n  DELETE_USER_FAIL,\r\n  CLEAR_DELETE_USER_MESSAGE,\r\n  GET_USER_REQUEST,\r\n  GET_USER_SUCCESS,\r\n  GET_USER_FAIL,\r\n  EDIT_USER_REQUEST,\r\n  EDIT_USER_SUCCESS,\r\n  EDIT_USER_FAIL,\r\n  EDIT_USER_RESET,\r\n} from \"../types/userTypes\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userProfileReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_PROFILE_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_PROFILE_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateProfileReducer = (state = { updatedUser: {} }, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, updatedUser: action.payload };\r\n    case UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_REQUEST:\r\n      return { loading: true };\r\n    case GET_USERS_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case GET_USERS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_USERS:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case DELETE_USER_REQUEST:\r\n      return { loading: true };\r\n    case DELETE_USER_SUCCESS:\r\n      return { loading: false, message: action.payload };\r\n    case DELETE_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CLEAR_DELETE_USER_MESSAGE:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_REQUEST:\r\n      return { loading: true };\r\n    case GET_USER_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case GET_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const editUserReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case EDIT_USER_REQUEST:\r\n      return { loading: true };\r\n    case EDIT_USER_SUCCESS:\r\n      return { loading: false, success: true, user: action.payload };\r\n    case EDIT_USER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case EDIT_USER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\userTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\LoginScreen\\LoginScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\userActions.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\RegisterScreen\\RegisterScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UpdateProfileScreen\\UpdateProfileScreen.jsx",["217"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  updateUserProfile,\r\n} from \"../../redux/actions/userActions\";\r\nimport { getMyOrders } from \"../../redux/actions/orderActions\";\r\nimport styles from \"./UpdateProfileScreen.module.css\";\r\n\r\nconst UpdateProfileScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { user, loading, error } = userProfile;\r\n\r\n  \r\n  const orders = useSelector((state) => state.myOrders);\r\n  const { myOrders, loading: myOrdersLoading, error: myOrdersError } = orders;\r\n  \r\n  const updateProfile = useSelector((state) => state.updateProfile);\r\n  const { success, updatedUser } = updateProfile;\r\n  \r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n    dispatch(getMyOrders());\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <h1>Update Profile</h1>\r\n        {error ? <Message text={error} variant=\"error\" /> : null}\r\n        {success ? (\r\n          <Message text=\"Profile Updated Successfully\" variant=\"success\" />\r\n        ) : null}\r\n        {loading ? <Loader /> : null}\r\n        <form>\r\n          <div className={styles.field}>\r\n            <label>Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter Name\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>Email Address</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter Email\"\r\n              autoComplete=\"off\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className={styles.field}>\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"Enter Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button onClick={handleSubmit}>Update</button>\r\n        </form>\r\n      </div>\r\n      {/* my orders */}\r\n      <div className={styles.myOrdersContainer}>\r\n        <h1>My orders</h1>\r\n\r\n        {myOrdersLoading ? (\r\n          <Loader width=\"50px\" />\r\n        ) : myOrdersError ? (\r\n          <Message variant=\"error\" text=\"some error\" />\r\n        ) : (\r\n          myOrders.map((item) => (\r\n            <Link to={`/orders/${item._id}`}>\r\n              <table>\r\n                <tr className={styles.headingRow}>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>DELIVERED</th>\r\n                </tr>\r\n                <tr className={styles.dataRow}>\r\n                  <td>{item._id}</td>\r\n                  <td>{item.createdAt}</td>\r\n                  <td>{item.totalPrice}</td>\r\n                  <td>\r\n                    {item.isPaid ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {item.isDelivered ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"green\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfileScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ShippingScreen\\ShippingScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Steps\\Steps.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PaymentScreen\\PaymentScreen.jsx",["218"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../../redux/actions/cartActions\";\r\nimport styles from \"./PaymentScreen.module.css\";\r\nimport Steps from \"../../components/Steps/Steps\";\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shipping } = cart;\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shipping) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push(\"/place-order\");\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.formContainer}>\r\n        <Steps step1 step2 step3/>\r\n        <h1>Payment Method</h1>\r\n        <form>\r\n          <h3>Select Method</h3>\r\n          <div className={styles.field}>\r\n            <input\r\n              type=\"radio\"\r\n              value={paymentMethod}\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n            <label>Payment Method</label>\r\n          </div>\r\n          <button onClick={handleSubmit}>Continue</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\PlaceOrderScreen\\PlaceOrderScreen.jsx",["219","220","221","222","223","224","225"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrder } from \"../../redux/actions/orderActions\";\r\nimport Steps from \"../../components/Steps/Steps\";\r\nimport styles from \"./PlaceOrderScreen.module.css\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shipping, cartItems, payment } = cart;\r\n  const { address, city, country, postalCode } = shipping;\r\n\r\n  const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 100\r\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2))\r\n  const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n\r\n  const orderState = useSelector(state => state.order)\r\n  const { success, order, error, loading } = orderState\r\n\r\n  useEffect(() => {\r\n    if(success) {\r\n      history.push(`/orders/${order._id}`)\r\n    }\r\n  }, [history, success])\r\n\r\n  const placeOrder = e => {\r\n    e.preventDefault()\r\n    dispatch(createOrder({\r\n      orderItems: cartItems,\r\n      shippingAddress: shipping,\r\n      paymentMethod: payment,\r\n      taxPrice: taxPrice,\r\n      shippingPrice: shippingPrice,\r\n      totalPrice: totalPrice,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <Steps step1 step2 step3 step4 />\r\n      <div className={styles.container}>\r\n        <div className={styles.leftContainer}>\r\n          <div className={styles.step}>\r\n            <h2>Shipping</h2>\r\n            <p>{address}</p>\r\n          </div>\r\n          <hr />\r\n          <div className={styles.step}>\r\n            <h2>Payment Method</h2>\r\n            <p>Method: {payment}</p>\r\n          </div>\r\n          <hr />\r\n          <div className={styles.step}>\r\n            <h2>Order Items</h2>\r\n            <div className={styles.products}>\r\n              {cartItems.map((product) => (\r\n                <>\r\n                  <div className={styles.product} key={product.product}>\r\n                    <img src={product.image} alt={product.name} />\r\n                    <p>{product.name}</p>\r\n                    <span>{product.qty} x {product.price} = {(product.qty * product.price).toFixed(2)}</span>\r\n                  </div>\r\n                  <hr />\r\n                </>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.rightContainer}>\r\n          <div className={styles.orderSummary}>\r\n            <h2>Order Summary</h2>\r\n            <span>\r\n              <p>Items</p>\r\n              <p>${itemsPrice}</p>\r\n            </span>\r\n            <span>\r\n              <p>Shipping</p>\r\n              <p>${shippingPrice}</p>\r\n            </span>\r\n            <span>\r\n              <p>Tax</p>\r\n              <p>${taxPrice}</p>\r\n            </span>\r\n            <span>\r\n              <p>Total</p>\r\n              <p>${totalPrice}</p>\r\n            </span>\r\n            <span>\r\n              <button onClick={placeOrder}>Place Order</button>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\reducers\\orderReducers.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\types\\orderTypes.js",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\redux\\actions\\orderActions.js",["226"],"import axios from \"axios\";\r\nimport {\r\n  CREATE_ORDER_REQUEST,\r\n  CREATE_ORDER_SUCCESS,\r\n  CREATE_ORDER_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  GET_MY_ORDERS_REQUEST,\r\n  GET_MY_ORDERS_SUCCESS,\r\n  GET_MY_ORDERS_FAIL,\r\n  GET_ALL_ORDERS_REQUEST,\r\n  GET_ALL_ORDERS_SUCCESS,\r\n  GET_ALL_ORDERS_FAIL,\r\n  ORDER_DELIVERED_REQUEST,\r\n  ORDER_DELIVERED_SUCCESS,\r\n  ORDER_DELIVERED_FAIL,\r\n} from \"../types/orderTypes\";\r\n\r\n// Create order\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/orders\", order, config);\r\n\r\n    dispatch({ type: CREATE_ORDER_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: CREATE_ORDER_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// get order by id\r\n\r\nexport const getOrder = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// update order\r\n\r\nexport const updateOrder = (id, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${id}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: ORDER_PAY_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: ORDER_PAY_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// mark as delivered\r\n\r\nexport const markAsDelivered = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DELIVERED_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${id}/delivered`, {}, config);\r\n\r\n    dispatch({ type: ORDER_DELIVERED_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: ORDER_DELIVERED_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// get my orders\r\n\r\nexport const getMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_MY_ORDERS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({ type: GET_MY_ORDERS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: GET_MY_ORDERS_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n// get all orders\r\n\r\nexport const getAllOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GET_ALL_ORDERS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${getState().userLogin.userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({ type: GET_ALL_ORDERS_SUCCESS, payload: data });\r\n  } catch (err) {\r\n    dispatch({ type: GET_ALL_ORDERS_FAIL, payload: err.message });\r\n  }\r\n};\r\n\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\OrderDetails\\OrderDetails.jsx",["227","228","229","230","231","232","233","234"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getOrder,\r\n  markAsDelivered,\r\n  updateOrder,\r\n} from \"../../redux/actions/orderActions\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport styles from \"./OrderDetails.module.css\";\r\n\r\nconst OrderDetails = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const orderId = match.params.id;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { success, order, error, loading } = orderDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems, payment } = cart;\r\n\r\n\r\n  const itemsPrice = Number(\r\n    cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  ).toFixed(2);\r\n  const shippingPrice =\r\n    itemsPrice > 100 ? Number(0).toFixed(2) : Number(100).toFixed(2);\r\n  const taxPrice = Number((0.15 * itemsPrice).toFixed(2));\r\n  const totalPrice = (\r\n    Number(itemsPrice) +\r\n    Number(shippingPrice) +\r\n    Number(taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const updatedOrder = useSelector((state) => state.updateOrder);\r\n  const {\r\n    success: paySuccess,\r\n    error: payError,\r\n    loading: payLoading,\r\n  } = updatedOrder;\r\n\r\n  const markAsDeliveredState = useSelector((state) => state.markAsDelivered);\r\n  const {\r\n    success: deliverySuccess,\r\n    error: deliveryError,\r\n    loading: deliveryLoading,\r\n  } = markAsDeliveredState;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    dispatch(getOrder(orderId));\r\n  }, [dispatch, orderId, userInfo, paySuccess, history, deliverySuccess]);\r\n\r\n  const pay = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateOrder(orderId, {\r\n        id: 1,\r\n        status: \"status\",\r\n        update_time: \"update_time\",\r\n        email_address: \"email_address\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const deliveryHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(markAsDelivered(orderId));\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      { !order ? (\r\n        <Loader />\r\n      ) : (\r\n        <div className={styles.mainContainer}>\r\n          <h1 className={styles.orderNo}>Order {order._id}</h1>\r\n          <div className={styles.container}>\r\n            <div className={styles.leftContainer}>\r\n              <div className={styles.step}>\r\n                <h2>Shipping</h2>\r\n                <p>Name: {order.user.name}</p>\r\n                <p>Email: {order.user.email}</p>\r\n                <p>Address: {order.shippingAddress.address}</p>\r\n                <Message\r\n                  variant={order.isDelivered ? \"success\" : \"error\"}\r\n                  text={order.isDelivered ? \"Delivered\" : \"Not Delivered\"}\r\n                />\r\n              </div>\r\n              <hr />\r\n              <div className={styles.step}>\r\n                <h2>Payment Method</h2>\r\n                <p>Method: {payment}</p>\r\n                <Message\r\n                  variant={order.isPaid ? \"success\" : \"error\"}\r\n                  text={order.isPaid ? \"Paid\" : \"Not Paid\"}\r\n                />\r\n              </div>\r\n              <hr />\r\n              <div className={styles.step}>\r\n                <h2>Order Items</h2>\r\n                <div className={styles.products}>\r\n                  {cartItems.map((product) => (\r\n                    <>\r\n                      <div className={styles.product} key={product.product}>\r\n                        <img src={product.image} alt={product.name} />\r\n                        <p>{product.name}</p>\r\n                        <span>\r\n                          {product.qty} x {product.price} = $\r\n                          {(product.qty * product.price).toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                      <hr />\r\n                    </>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.rightContainer}>\r\n              <div className={styles.orderSummary}>\r\n                <h2>Order Summary</h2>\r\n                <span>\r\n                  <p>Items</p>\r\n                  <p>${itemsPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <p>Shipping</p>\r\n                  <p>${shippingPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <p>Tax</p>\r\n                  <p>${taxPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <p>Total</p>\r\n                  <p>${totalPrice}</p>\r\n                </span>\r\n                <span>\r\n                  <button onClick={pay}>Pay</button>\r\n                </span>\r\n              </div>\r\n              { userInfo && userInfo.isAdmin ? (\r\n                <div className={styles.markAsDeliveredBtn}>\r\n                  <button onClick={deliveryHandler} disabled={deliverySuccess}>\r\n                    Mark as delivered\r\n                  </button>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\UserListScreen\\UserListScreen.jsx",["235","236","237","238"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  clearDeleteMsg,\r\n  deleteUser,\r\n  getAllUsers,\r\n} from \"../../redux/actions/userActions\";\r\nimport styles from \"./UserListScreen.module.css\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, error } = userLogin;\r\n\r\n  const allUsers = useSelector((state) => state.allUsers);\r\n  const { users, loading: usersLoading, error: usersError } = allUsers;\r\n\r\n  const deleteUserUpdate = useSelector((state) => state.deleteUser);\r\n  const {\r\n    message,\r\n    loading: deleteLoading,\r\n    error: deleteError,\r\n  } = deleteUserUpdate;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getAllUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, message]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1>Users</h1>\r\n      {deleteLoading ? (\r\n        <Loader width=\"30px\" />\r\n      ) : message ? (\r\n        <Message\r\n          variant=\"success\"\r\n          text={message.message}\r\n          onClick={() => dispatch(clearDeleteMsg())}\r\n        />\r\n      ) : null}\r\n      {error ? (\r\n        <Message\r\n          variant=\"success\"\r\n          text=\"Something's wrong\"\r\n          onClick={() => dispatch(clearDeleteMsg())}\r\n        />\r\n      ) : null}\r\n      {!users ? (\r\n        <Loader width=\"50px\" />\r\n      ) : (\r\n        <table>\r\n          <tr className={styles.headingRow}>\r\n            <th>ID</th>\r\n            <th>NAME</th>\r\n            <th>EMAIL</th>\r\n            <th>ADMIN</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n          {users.map((user) => (\r\n            <tr className={styles.dataRow}>\r\n              <td>{user._id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>\r\n                {user.isAdmin ? (\r\n                  <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                ) : (\r\n                  <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <Link to={`/user/${user._id}/edit`}>\r\n                  <i className=\"fas fa-edit\" style={{ color: \"green\" }}></i>\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                <i\r\n                  className=\"fas fa-trash\"\r\n                  onClick={() => dispatch(deleteUser(user._id))}\r\n                  style={{ color: \"red\" }}\r\n                ></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\EditUserScreen\\EditUserScreen.jsx",["239","240","241","242","243","244"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, editUser, clearEditMsg } from \"../../redux/actions/userActions\";\r\nimport styles from \"./EditUserScreen.module.css\";\r\n\r\nconst EditUserScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  const userProfile = useSelector((state) => state.userProfile);\r\n  const { user, loading: profileLoading, error: profileError } = userProfile;\r\n\r\n  const updatedUser = useSelector((state) => state.editUser);\r\n  const {\r\n    user: editedUser,\r\n    success: editSuccess,\r\n    loading: editLoading,\r\n    error: editError,\r\n  } = updatedUser;\r\n\r\n  useEffect(() => {\r\n    if (!user.name || user._id !== match.params.id) {\r\n      dispatch(getUserDetails(match.params.id));\r\n    } else {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setIsAdmin(user.isAdmin);\r\n    }\r\n  }, [dispatch, history, match, user]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      editUser({\r\n        _id: user._id,\r\n        name,\r\n        email,\r\n        isAdmin,\r\n      })\r\n    );\r\n  };\r\nconsole.log(isAdmin)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.subContainer}>\r\n        {editLoading ? (\r\n          <Loader width=\"30px\" />\r\n        ) : editSuccess ? (\r\n          <Message variant=\"success\" onClick={() => dispatch(clearEditMsg())} text=\"User Updated Successfully\" />\r\n        ) : editError ? (\r\n          <Message variant=\"error\" onClick={() => dispatch(clearEditMsg())} text=\"Something's wrong\" />\r\n        ) : null}\r\n        {profileLoading ? (\r\n          <div>\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.formContainer}>\r\n            <h1>Edit user</h1>\r\n            <form>\r\n              <div className={styles.field}>\r\n                <label>Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  placeholder=\"Enter Name\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Email Address</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  placeholder=\"Enter Email\"\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.checkField}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"check\"\r\n                  value={isAdmin}\r\n                  onChange={(e) => setIsAdmin(!isAdmin)}\r\n                />\r\n                {user.isAdmin ? <label>Remove Admin</label> : <label>Make {user.name} Admin</label>}\r\n              </div>\r\n              <button onClick={handleSubmit}>Update</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUserScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\ProductsListScreen\\ProductsListScreen.jsx",["245","246","247"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  clearDeleteMsg,\r\n  createProduct,\r\n} from \"../../redux/actions/productActions\";\r\nimport { CREATE_PRODUCT_RESET } from \"../../redux/types/productTypes\";\r\nimport styles from \"./ProductsListScreen.module.css\";\r\n\r\nconst ProductsListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const {\r\n    products,\r\n    loading: productLoading,\r\n    error: productError,\r\n  } = productList;\r\n\r\n  const deleteProductState = useSelector((state) => state.deleteProduct);\r\n  const {\r\n    message,\r\n    loading: deleteLoading,\r\n    error: deleteError,\r\n  } = deleteProductState;\r\n\r\n  const createdProduct = useSelector((state) => state.createProduct);\r\n  const {\r\n    product: newProduct,\r\n    success: createSuccess,\r\n    loading: createLoading,\r\n    error: createError,\r\n  } = createdProduct;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: CREATE_PRODUCT_RESET });\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (createSuccess) {\r\n      history.push(`/admin/product/${newProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [dispatch, history, userInfo, message, createSuccess, newProduct]);\r\n\r\n  const addNewProduct = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createProduct());\r\n  };\r\n  \r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.topContainer}>\r\n        <h1>Products</h1>\r\n        <button onClick={addNewProduct}>Add new product</button>\r\n      </div>\r\n\r\n      {createLoading ? <Loader width=\"15px\" /> : null}\r\n      {deleteLoading ? (\r\n        <Loader width=\"30px\" />\r\n      ) : message ? (\r\n        <Message\r\n          variant=\"success\"\r\n          text={message.message}\r\n          onClick={() => dispatch(clearDeleteMsg())}\r\n        />\r\n      ) : null}\r\n      {deleteError ? (\r\n        <Message\r\n          variant=\"success\"\r\n          text=\"Something's wrong\"\r\n          onClick={() => dispatch(clearDeleteMsg())}\r\n        />\r\n      ) : null}\r\n      {!products ? (\r\n        <Loader width=\"50px\" />\r\n      ) : (\r\n        <table>\r\n          <tr className={styles.headingRow}>\r\n            <th>ID</th>\r\n            <th>NAME</th>\r\n            <th>PRICE</th>\r\n            <th>CATEGORY</th>\r\n            <th>BRAND</th>\r\n            <th></th>\r\n            <th></th>\r\n          </tr>\r\n          {products.map((product) => (\r\n            <tr className={styles.dataRow}>\r\n              <td>{product._id}</td>\r\n              <td>{product.name}</td>\r\n              <td>{product.price}</td>\r\n              <td>{product.category}</td>\r\n              <td>{product.brand}</td>\r\n              <td>\r\n                <Link to={`/admin/product/${product._id}/edit`}>\r\n                  <i className=\"fas fa-edit\" style={{ color: \"green\" }}></i>\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                <i\r\n                  className=\"fas fa-trash\"\r\n                  onClick={() => dispatch(deleteProduct(product._id))}\r\n                  style={{ color: \"red\" }}\r\n                ></i>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductsListScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\EditProductScreen\\EditProductScreen.jsx",["248","249","250"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Message from \"../../components/Message/Message\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styles from \"./EditProductScreen.module.css\";\r\nimport {\r\n  listProductDetails,\r\n  updateProduct,\r\n} from \"../../redux/actions/productActions\";\r\n\r\nconst EditProductScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { product, loading, error } = productDetails;\r\n\r\n  const updatedProductState = useSelector((state) => state.updateProduct);\r\n  const {\r\n    updatedProduct,\r\n    success,\r\n    loading: updateLoading,\r\n    error: updateError,\r\n  } = updatedProductState;\r\n\r\n  useEffect(() => {\r\n    if (!product.name || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setBrand(product.brand);\r\n      setCountInStock(product.countInStock);\r\n      setCategory(product.category);\r\n      setDescription(product.description);\r\n    }\r\n  }, [dispatch, history, match.params.id, product]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: product._id,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        countInStock,\r\n        category,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  const imgUploader = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.subContainer}>\r\n        {updateLoading ? <Loader /> : null}\r\n        {success ? (\r\n          <Message variant=\"success\" text=\"Product Updated Successfully\" />\r\n        ) : null}\r\n        {updateError ? (\r\n          <Message variant=\"error\" text=\"Something's wrong\" />\r\n        ) : null}\r\n        {loading ? (\r\n          <div>\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.formContainer}>\r\n            <h1>Edit Product</h1>\r\n            <form>\r\n              <div className={styles.field}>\r\n                <label>Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Price</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  value={price}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Image</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"image\"\r\n                  value={image}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                />\r\n              </div>\r\n              { uploading && <Loader width=\"30px\" /> }\r\n              <div className={styles.imgUpload}>\r\n                <input type=\"file\" name=\"file\" onChange={imgUploader} />\r\n                <button>Browse</button>\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Brand</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"brand\"\r\n                  value={brand}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Count in Stock</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"countInStock\"\r\n                  value={countInStock}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Category</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={category}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className={styles.field}>\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  autoComplete=\"off\"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                />\r\n              </div>\r\n              <button onClick={handleSubmit}>Update</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProductScreen;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\OrdersListScreen\\OrdersListScreen.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Modal\\Modal.jsx",["251"],"import React, { useState } from \"react\";\r\nimport styles from \"./Modal.module.css\";\r\n\r\nconst Modal = ({\r\n  isOpen,\r\n  setIsOpen,\r\n  onChange,\r\n  onClick,\r\n  comment,\r\n  rating,\r\n}) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div\r\n        className={styles.overlay}\r\n        style={\r\n          isOpen\r\n            ? { visibility: \"visible\", opacity: \"1\" }\r\n            : { visibility: \"hidden\", opacity: \"0\" }\r\n        }\r\n      >\r\n        <div className={styles.popup}>\r\n          <div className={styles.header}>\r\n            <h3>Write your review</h3>\r\n            <i\r\n              className={styles.close + \" fas fa-times\"}\r\n              onClick={() => setIsOpen(false)}\r\n            ></i>\r\n          </div>\r\n          <div className={styles.content}>\r\n            <div className={styles.field}>\r\n              <label>Rating</label>\r\n              <div className={styles.selectDropdown}>\r\n                <select onChange={onChange} value={rating} name=\"dropdown\">\r\n                  <option value=\"1\">Poor</option>\r\n                  <option value=\"2\">Fair</option>\r\n                  <option value=\"3\">Good</option>\r\n                  <option value=\"4\">Very Good</option>\r\n                  <option value=\"5\">Excellent</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className={styles.field}>\r\n              <label>Comment</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"comment\"\r\n                value={comment}\r\n                placeholder=\"Enter Your Comment\"\r\n                autoComplete=\"off\"\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className={styles.btnContainer}>\r\n              <button onClick={() => setIsOpen(false)}>Close</button>\r\n              <button onClick={onClick}>Submit</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\SearchBar\\SearchBar.jsx",[],"D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\ProductCarousel\\ProductCarousel.jsx",["252"],"import React from \"react\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport styles from \"./ProductCarousel.module.css\";\r\n\r\nconst ProductCarousel = ({ images }) => {\r\n  return (\r\n    <Carousel\r\n      showArrows={false}\r\n      infiniteLoop={true}\r\n      showIndicators={false}\r\n      showThumbs={false}\r\n      showStatus={false}\r\n      autoPlay={true}\r\n      swipeable={true}\r\n      emulateTouch={true}\r\n      dynamicHeight={true}\r\n    >\r\n      {images.map((image) => (\r\n        <div className={styles.div}>\r\n          <img src={image} className={styles.img} />\r\n        </div>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\components\\Header\\SideNav\\SideNav.jsx",["253","254"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../redux/actions/userActions\";\r\nimport styles from \"./SideNav.module.css\";\r\n\r\nconst SideNav = ({ isOpen, setIsOpen }) => {\r\n  const dispatch = useDispatch();\r\n  const [isDropDown, setIsDropDown] = useState(false);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  return (\r\n    <div\r\n      className={styles.container}\r\n      style={isOpen ? { width: \"260px\" } : { width: \"0px\" }}\r\n    >\r\n      <div className={styles.row}>\r\n        <Link\r\n          to={userInfo ? \"/update-profile\" : \"/login\"}\r\n          onClick={() => setIsOpen(false)}\r\n        >\r\n          <div className={styles.left}>\r\n            <i className={styles.icon + \" fas fa-user\"}></i>\r\n            <p>{userInfo ? \"My Profile\" : \"Login\"}</p>\r\n          </div>\r\n        </Link>\r\n        <div className={styles.right}>\r\n          <i class=\"fas fa-times\" onClick={() => setIsOpen(false)}></i>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {!userInfo ? (\r\n        <>\r\n          <div\r\n            className={styles.row}\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            <div className={styles.left}>\r\n              <i className={styles.icon + \" fas fa-sign-out-alt\"}></i>\r\n              <p>Register</p>\r\n            </div>\r\n            <div className={styles.right}>\r\n              <i className={styles.icon + \" fas fa-angle-double-right\"}></i>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </>\r\n      ) : null}\r\n      {userInfo && userInfo.isAdmin ? (\r\n        <>\r\n          <div className={styles.rowWrapper}>\r\n            <div\r\n              className={styles.row}\r\n              onClick={() => setIsDropDown(!isDropDown)}\r\n            >\r\n              <div className={styles.left}>\r\n                <i className={styles.icon + \" fas fa-user-shield\"}></i>\r\n                <p>Admin</p>\r\n              </div>\r\n              <div className={styles.right}>\r\n                <i\r\n                  className={\r\n                    styles.icon +\r\n                    ` fas fa-angle-double-${isDropDown ? `up` : `down`}`\r\n                  }\r\n                ></i>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={styles.dropdown}\r\n              style={isDropDown ? { height: \"100%\" } : { height: \"0px\" }}\r\n            >\r\n              <p>Users</p>\r\n              <p>Products</p>\r\n              <p>Orders</p>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n        </>\r\n      ) : null}\r\n      <div className={styles.row}>\r\n        <Link to=\"/\" onClick={() => setIsOpen(false)}>\r\n          <div className={styles.left}>\r\n            <i className={styles.icon + \" fas fa-home\"}></i>\r\n            <p>Home</p>\r\n          </div>\r\n        </Link>\r\n        <div className={styles.right}>\r\n          <i className={styles.icon + \" fas fa-angle-double-right\"}></i>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={styles.row}>\r\n        <Link to=\"/\" onClick={() => setIsOpen(false)}>\r\n          <div className={styles.left}>\r\n            <i className={styles.icon + \" fas fa-users\"}></i>\r\n            <p>About</p>\r\n          </div>\r\n        </Link>\r\n        <div className={styles.right}>\r\n          <i className={styles.icon + \" fas fa-angle-double-right\"}></i>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={styles.row}>\r\n        <Link to=\"/cart\" onClick={() => setIsOpen(false)}>\r\n          <div className={styles.left}>\r\n            <i className={styles.icon + \" fas fa-cart-plus\"}></i>\r\n            <p>Cart</p>\r\n          </div>\r\n        </Link>\r\n        <div className={styles.right}>\r\n          <i className={styles.icon + \" fas fa-angle-double-right\"}></i>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={styles.row}>\r\n        <Link to=\"/\" onClick={() => setIsOpen(false)}>\r\n          <div className={styles.left}>\r\n            <i className={styles.icon + \" fas fa-store-alt\"}></i>\r\n            <p>Shop</p>\r\n          </div>\r\n        </Link>\r\n        <div className={styles.right}>\r\n          <i className={styles.icon + \" fas fa-angle-double-right\"}></i>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      {userInfo ? (\r\n        <div\r\n          className={styles.row}\r\n          onClick={() => {\r\n            dispatch(logout());\r\n            setIsOpen(false);\r\n          }}\r\n        >\r\n          <div className={styles.left}>\r\n            <i className={styles.icon + \" fas fa-sign-out-alt\"}></i>\r\n            <p>Logout</p>\r\n          </div>\r\n          <div className={styles.right}>\r\n            <i className={styles.icon + \" fas fa-angle-double-right\"}></i>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n","D:\\Coding\\LEARNING\\MERN_E-COMMERCE_APP\\frontend\\src\\screens\\SearchScreen\\SearchScreen.jsx",[],{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":17,"column":21,"nodeType":"261","messageId":"262","endLine":17,"endColumn":28},{"ruleId":"259","severity":1,"message":"263","line":17,"column":30,"nodeType":"261","messageId":"262","endLine":17,"endColumn":35},{"ruleId":"259","severity":1,"message":"264","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"265","severity":1,"message":"266","line":19,"column":6,"nodeType":"267","endLine":19,"endColumn":16,"suggestions":"268"},{"ruleId":"255","replacedBy":"269"},{"ruleId":"257","replacedBy":"270"},{"ruleId":"259","severity":1,"message":"271","line":26,"column":14,"nodeType":"261","messageId":"262","endLine":26,"endColumn":27},{"ruleId":"259","severity":1,"message":"272","line":27,"column":12,"nodeType":"261","messageId":"262","endLine":27,"endColumn":23},{"ruleId":"259","severity":1,"message":"264","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"259","severity":1,"message":"260","line":16,"column":21,"nodeType":"261","messageId":"262","endLine":16,"endColumn":28},{"ruleId":"259","severity":1,"message":"263","line":16,"column":30,"nodeType":"261","messageId":"262","endLine":16,"endColumn":35},{"ruleId":"259","severity":1,"message":"264","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"259","severity":1,"message":"273","line":2,"column":23,"nodeType":"261","messageId":"262","endLine":2,"endColumn":34},{"ruleId":"259","severity":1,"message":"274","line":1,"column":10,"nodeType":"261","messageId":"262","endLine":1,"endColumn":28},{"ruleId":"259","severity":1,"message":"275","line":28,"column":20,"nodeType":"261","messageId":"262","endLine":28,"endColumn":31},{"ruleId":"259","severity":1,"message":"276","line":1,"column":27,"nodeType":"261","messageId":"262","endLine":1,"endColumn":36},{"ruleId":"259","severity":1,"message":"264","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"259","severity":1,"message":"277","line":12,"column":20,"nodeType":"261","messageId":"262","endLine":12,"endColumn":24},{"ruleId":"259","severity":1,"message":"278","line":12,"column":26,"nodeType":"261","messageId":"262","endLine":12,"endColumn":33},{"ruleId":"259","severity":1,"message":"279","line":12,"column":35,"nodeType":"261","messageId":"262","endLine":12,"endColumn":45},{"ruleId":"259","severity":1,"message":"263","line":20,"column":27,"nodeType":"261","messageId":"262","endLine":20,"endColumn":32},{"ruleId":"259","severity":1,"message":"260","line":20,"column":34,"nodeType":"261","messageId":"262","endLine":20,"endColumn":41},{"ruleId":"265","severity":1,"message":"280","line":26,"column":6,"nodeType":"267","endLine":26,"endColumn":24,"suggestions":"281"},{"ruleId":"259","severity":1,"message":"282","line":12,"column":3,"nodeType":"261","messageId":"262","endLine":12,"endColumn":18},{"ruleId":"259","severity":1,"message":"264","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"259","severity":1,"message":"283","line":17,"column":11,"nodeType":"261","messageId":"262","endLine":17,"endColumn":18},{"ruleId":"259","severity":1,"message":"263","line":17,"column":27,"nodeType":"261","messageId":"262","endLine":17,"endColumn":32},{"ruleId":"259","severity":1,"message":"260","line":17,"column":34,"nodeType":"261","messageId":"262","endLine":17,"endColumn":41},{"ruleId":"259","severity":1,"message":"284","line":41,"column":12,"nodeType":"261","messageId":"262","endLine":41,"endColumn":20},{"ruleId":"259","severity":1,"message":"285","line":42,"column":14,"nodeType":"261","messageId":"262","endLine":42,"endColumn":24},{"ruleId":"259","severity":1,"message":"286","line":48,"column":12,"nodeType":"261","messageId":"262","endLine":48,"endColumn":25},{"ruleId":"259","severity":1,"message":"287","line":49,"column":14,"nodeType":"261","messageId":"262","endLine":49,"endColumn":29},{"ruleId":"259","severity":1,"message":"288","line":20,"column":27,"nodeType":"261","messageId":"262","endLine":20,"endColumn":39},{"ruleId":"259","severity":1,"message":"289","line":20,"column":48,"nodeType":"261","messageId":"262","endLine":20,"endColumn":58},{"ruleId":"259","severity":1,"message":"290","line":26,"column":12,"nodeType":"261","messageId":"262","endLine":26,"endColumn":23},{"ruleId":"265","severity":1,"message":"291","line":35,"column":6,"nodeType":"267","endLine":35,"endColumn":34,"suggestions":"292"},{"ruleId":"259","severity":1,"message":"293","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":14},{"ruleId":"259","severity":1,"message":"294","line":17,"column":11,"nodeType":"261","messageId":"262","endLine":17,"endColumn":19},{"ruleId":"259","severity":1,"message":"260","line":17,"column":21,"nodeType":"261","messageId":"262","endLine":17,"endColumn":28},{"ruleId":"259","severity":1,"message":"263","line":17,"column":30,"nodeType":"261","messageId":"262","endLine":17,"endColumn":35},{"ruleId":"259","severity":1,"message":"295","line":20,"column":49,"nodeType":"261","messageId":"262","endLine":20,"endColumn":61},{"ruleId":"259","severity":1,"message":"296","line":24,"column":11,"nodeType":"261","messageId":"262","endLine":24,"endColumn":21},{"ruleId":"259","severity":1,"message":"297","line":21,"column":14,"nodeType":"261","messageId":"262","endLine":21,"endColumn":28},{"ruleId":"259","severity":1,"message":"298","line":22,"column":12,"nodeType":"261","messageId":"262","endLine":22,"endColumn":24},{"ruleId":"259","severity":1,"message":"299","line":37,"column":12,"nodeType":"261","messageId":"262","endLine":37,"endColumn":23},{"ruleId":"259","severity":1,"message":"294","line":26,"column":11,"nodeType":"261","messageId":"262","endLine":26,"endColumn":19},{"ruleId":"259","severity":1,"message":"263","line":29,"column":29,"nodeType":"261","messageId":"262","endLine":29,"endColumn":34},{"ruleId":"259","severity":1,"message":"300","line":33,"column":5,"nodeType":"261","messageId":"262","endLine":33,"endColumn":19},{"ruleId":"259","severity":1,"message":"264","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":21,"column":11,"nodeType":"303","endLine":21,"endColumn":53},{"ruleId":"259","severity":1,"message":"260","line":12,"column":21,"nodeType":"261","messageId":"262","endLine":12,"endColumn":28},{"ruleId":"259","severity":1,"message":"263","line":12,"column":30,"nodeType":"261","messageId":"262","endLine":12,"endColumn":35},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["306"],["304"],["305"],"'reviewLoading' is assigned a value but never used.","'reviewError' is assigned a value but never used.","'useSelector' is defined but never used.","'GET_MY_ORDERS_FAIL' is defined but never used.","'updatedUser' is assigned a value but never used.","'useEffect' is defined but never used.","'city' is assigned a value but never used.","'country' is assigned a value but never used.","'postalCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["307"],"'ORDER_PAY_RESET' is defined but never used.","'success' is assigned a value but never used.","'payError' is assigned a value but never used.","'payLoading' is assigned a value but never used.","'deliveryError' is assigned a value but never used.","'deliveryLoading' is assigned a value but never used.","'usersLoading' is assigned a value but never used.","'usersError' is assigned a value but never used.","'deleteError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["308"],"'Link' is defined but never used.","'userInfo' is assigned a value but never used.","'profileError' is assigned a value but never used.","'editedUser' is assigned a value but never used.","'productLoading' is assigned a value but never used.","'productError' is assigned a value but never used.","'createError' is assigned a value but never used.","'updatedProduct' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [dispatch, keyword]",{"range":"315","text":"316"},"Update the dependencies array to be: [history, order._id, success]",{"range":"317","text":"318"},"Update the dependencies array to be: [dispatch, history, message, userInfo]",{"range":"319","text":"320"},[776,786],"[dispatch, keyword]",[1034,1052],"[history, order._id, success]",[1057,1085],"[dispatch, history, message, userInfo]"]